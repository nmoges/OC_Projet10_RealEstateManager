plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.openclassrooms.data.CustomTestRunner"
        consumerProguardFiles "consumer-rules.pro"
        //testFunctionalTest = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // Core KTX
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // AppCompat
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    // Material Components
    implementation "com.google.android.material:material:$material_version"

    // Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Place SDK
    implementation "com.google.android.libraries.places:places:$places_version"

    // Volley
    implementation "com.android.volley:volley:$volley_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"

    // FirebaseUI
    implementation "com.firebaseui:firebase-ui-auth:$firebase_auth_version"

    // Firebase Storage
    implementation "com.google.firebase:firebase-storage"
    implementation "com.firebaseui:firebase-ui-storage:$firebase_storage_version"

    // Firebase Realtime Database
    implementation 'com.google.firebase:firebase-database-ktx'

    // Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"

    // Mockito
    def mockito_version = "2.19.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // Hilt instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Hilt For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // JUnit
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}

kapt {
    correctErrorTypes true 
}